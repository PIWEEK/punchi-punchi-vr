[gd_scene load_steps=4 format=2]

[ext_resource path="res://addons/godot-openvr/scenes/ovr_controller.tscn" type="PackedScene" id=1]

[sub_resource type="CapsuleShape" id=1]

radius = 1.0
height = 1.0

[sub_resource type="GDScript" id=2]

script/source = "extends ARVRController

signal controller_activated(controller)

var ovr_render_model
var components = Array()
var ws = 0

func _ready():
	# instance our render model object
	ovr_render_model = preload(\"res://addons/godot-openvr/OpenVRRenderModel.gdns\").new()
	
	# hide to begin with
	visible = false

func apply_world_scale():
	var new_ws = ARVRServer.world_scale
	if (ws != new_ws):
		ws = new_ws
		$Controller_mesh.scale = Vector3(ws, ws, ws)

func load_controller_mesh(controller_name):
	if ovr_render_model.load_model(controller_name.substr(0, controller_name.length()-2)):
		return ovr_render_model
	
	if ovr_render_model.load_model(\"generic_controller\"):
		return ovr_render_model
	
	return Mesh.new()

func _process(delta):
	if !get_is_active():
		visible = false
		return
	
	# always set our world scale, user may end up changing this
	apply_world_scale()
	
	if visible:
		return
	
	# became active? lets handle it...
	var controller_name = get_controller_name()
	print(\"Controller \" + controller_name + \" became active\")
			
	# attempt to load a mesh for this
	$Controller_mesh.mesh = load_controller_mesh(controller_name)
			
	# make it visible
	visible = true
	emit_signal(\"controller_activated\", self)
"

[node name="Player" type="ARVROrigin"]

world_scale = 1.0

[node name="ARVRCamera" type="ARVRCamera" parent="." index="0"]

transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.773149, 0 )
keep_aspect = 1
cull_mask = 1048575
environment = null
h_offset = 0.0
v_offset = 0.0
doppler_tracking = 0
projection = 0
current = false
fov = 70.0
size = 1.0
near = 0.05
far = 100.0
_sections_unfolded = [ "Transform" ]

[node name="Head" type="Area" parent="ARVRCamera" index="0"]

input_ray_pickable = false
input_capture_on_drag = false
space_override = 0
gravity_point = false
gravity_distance_scale = 0.0
gravity_vec = Vector3( 0, -1, 0 )
gravity = 9.8
linear_damp = 0.1
angular_damp = 1.0
priority = 0.0
monitoring = true
monitorable = true
collision_layer = 1
collision_mask = 1
audio_bus_override = false
audio_bus_name = "Master"
reverb_bus_enable = false
reverb_bus_name = "Master"
reverb_bus_amount = 0.0
reverb_bus_uniformity = 0.0
_sections_unfolded = [ "Transform" ]

[node name="CollisionShape" type="CollisionShape" parent="ARVRCamera/Head" index="0"]

transform = Transform( 0.2, 0, 0, 0, -4.88762e-08, 0.3, 0, -0.3, -4.88762e-08, 0, 0, 0 )
shape = SubResource( 1 )
disabled = false
_sections_unfolded = [ "Transform" ]

[node name="LeftController" parent="." index="1" instance=ExtResource( 1 )]

script = SubResource( 2 )

[node name="RightController" parent="." index="2" instance=ExtResource( 1 )]

controller_id = 2
script = SubResource( 2 )


